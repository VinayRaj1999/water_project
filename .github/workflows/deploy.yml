name: Docker Build and Deploy Shiny App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ground-water:v1
      
      - name: Check SSH and Docker secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then echo "Error: DOCKER_USERNAME is empty"; exit 1; fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then echo "Error: DOCKER_PASSWORD is empty"; exit 1; fi
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then echo "Error: SSH_PRIVATE_KEY is empty"; exit 1; fi
          if [ -z "${{ secrets.SERVER_USERNAME }}" ]; then echo "Error: SERVER_USERNAME is empty"; exit 1; fi
          if [ -z "${{ secrets.SERVER_IP }}" ]; then echo "Error: SERVER_IP is empty"; exit 1; fi
          if [ -z "${{ secrets.SERVER_PORT }}" ]; then echo "Error: SERVER_PORT is empty"; exit 1; fi
          echo "All secrets are set"
      
      - name: Deploy to Server via SSH
        run: |
          # Setup SSH key
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh_private_key
          chmod 600 /tmp/ssh_private_key

          # Deploy using SSH
          ssh -v -o StrictHostKeyChecking=no -i /tmp/ssh_private_key -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} /bin/bash << 'EOF' > ssh_output.log 2>&1
            # Log in to Docker Hub
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

            # Stop and remove existing container (if running)
            if [ "$(docker ps -q --filter name=vinay-proj)" ]; then
              docker stop vinay-proj || true
              docker rm -f vinay-proj || true
            fi

            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/ground-water:v1

            # Run the container
            docker run -d \
              --restart=unless-stopped \
              --name vinay-proj \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/ground-water:v1
          EOF
          cat ssh_output.log

      - name: Remove SSH key
        if: always()
        run: rm -f /tmp/ssh_private_key
